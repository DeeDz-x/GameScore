// Generated by view binder compiler. Do not edit!
package com.example.gamescore2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gamescore2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText gameSearch;

  @NonNull
  public final EditText genreSearch;

  @NonNull
  public final TextView headerSearch;

  @NonNull
  public final EditText publisherSearch;

  @NonNull
  public final Button ratingButtonSearch;

  @NonNull
  public final EditText releaseyearSearch;

  @NonNull
  public final Button startButtonSearch;

  @NonNull
  public final EditText usernameSearch;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView, @NonNull EditText gameSearch,
      @NonNull EditText genreSearch, @NonNull TextView headerSearch,
      @NonNull EditText publisherSearch, @NonNull Button ratingButtonSearch,
      @NonNull EditText releaseyearSearch, @NonNull Button startButtonSearch,
      @NonNull EditText usernameSearch) {
    this.rootView = rootView;
    this.gameSearch = gameSearch;
    this.genreSearch = genreSearch;
    this.headerSearch = headerSearch;
    this.publisherSearch = publisherSearch;
    this.ratingButtonSearch = ratingButtonSearch;
    this.releaseyearSearch = releaseyearSearch;
    this.startButtonSearch = startButtonSearch;
    this.usernameSearch = usernameSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gameSearch;
      EditText gameSearch = ViewBindings.findChildViewById(rootView, id);
      if (gameSearch == null) {
        break missingId;
      }

      id = R.id.genreSearch;
      EditText genreSearch = ViewBindings.findChildViewById(rootView, id);
      if (genreSearch == null) {
        break missingId;
      }

      id = R.id.headerSearch;
      TextView headerSearch = ViewBindings.findChildViewById(rootView, id);
      if (headerSearch == null) {
        break missingId;
      }

      id = R.id.publisherSearch;
      EditText publisherSearch = ViewBindings.findChildViewById(rootView, id);
      if (publisherSearch == null) {
        break missingId;
      }

      id = R.id.ratingButtonSearch;
      Button ratingButtonSearch = ViewBindings.findChildViewById(rootView, id);
      if (ratingButtonSearch == null) {
        break missingId;
      }

      id = R.id.releaseyearSearch;
      EditText releaseyearSearch = ViewBindings.findChildViewById(rootView, id);
      if (releaseyearSearch == null) {
        break missingId;
      }

      id = R.id.startButtonSearch;
      Button startButtonSearch = ViewBindings.findChildViewById(rootView, id);
      if (startButtonSearch == null) {
        break missingId;
      }

      id = R.id.usernameSearch;
      EditText usernameSearch = ViewBindings.findChildViewById(rootView, id);
      if (usernameSearch == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, gameSearch, genreSearch,
          headerSearch, publisherSearch, ratingButtonSearch, releaseyearSearch, startButtonSearch,
          usernameSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
