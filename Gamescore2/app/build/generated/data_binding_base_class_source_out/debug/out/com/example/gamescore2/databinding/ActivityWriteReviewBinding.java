// Generated by view binder compiler. Do not edit!
package com.example.gamescore2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RatingBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gamescore2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWriteReviewBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView ReviewWriteReview;

  @NonNull
  public final Button cancelButtonWriteReview;

  @NonNull
  public final Button confirmButtonWriteReview;

  @NonNull
  public final TextView gameWriteReview;

  @NonNull
  public final RatingBar ratingBarWriteReview;

  @NonNull
  public final EditText timePlayedWriteReview;

  @NonNull
  public final EditText writeReviewWriteReview;

  private ActivityWriteReviewBinding(@NonNull ScrollView rootView,
      @NonNull TextView ReviewWriteReview, @NonNull Button cancelButtonWriteReview,
      @NonNull Button confirmButtonWriteReview, @NonNull TextView gameWriteReview,
      @NonNull RatingBar ratingBarWriteReview, @NonNull EditText timePlayedWriteReview,
      @NonNull EditText writeReviewWriteReview) {
    this.rootView = rootView;
    this.ReviewWriteReview = ReviewWriteReview;
    this.cancelButtonWriteReview = cancelButtonWriteReview;
    this.confirmButtonWriteReview = confirmButtonWriteReview;
    this.gameWriteReview = gameWriteReview;
    this.ratingBarWriteReview = ratingBarWriteReview;
    this.timePlayedWriteReview = timePlayedWriteReview;
    this.writeReviewWriteReview = writeReviewWriteReview;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWriteReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWriteReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_write_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWriteReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ReviewWriteReview;
      TextView ReviewWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (ReviewWriteReview == null) {
        break missingId;
      }

      id = R.id.cancelButtonWriteReview;
      Button cancelButtonWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (cancelButtonWriteReview == null) {
        break missingId;
      }

      id = R.id.confirmButtonWriteReview;
      Button confirmButtonWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (confirmButtonWriteReview == null) {
        break missingId;
      }

      id = R.id.gameWriteReview;
      TextView gameWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (gameWriteReview == null) {
        break missingId;
      }

      id = R.id.ratingBarWriteReview;
      RatingBar ratingBarWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarWriteReview == null) {
        break missingId;
      }

      id = R.id.timePlayedWriteReview;
      EditText timePlayedWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (timePlayedWriteReview == null) {
        break missingId;
      }

      id = R.id.writeReviewWriteReview;
      EditText writeReviewWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (writeReviewWriteReview == null) {
        break missingId;
      }

      return new ActivityWriteReviewBinding((ScrollView) rootView, ReviewWriteReview,
          cancelButtonWriteReview, confirmButtonWriteReview, gameWriteReview, ratingBarWriteReview,
          timePlayedWriteReview, writeReviewWriteReview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
